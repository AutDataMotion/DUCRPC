// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `rice.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package RPCRice;

public interface InfRicePrx extends Ice.ObjectPrx
{
    public String maxlikehood(Classify inputclass, java.util.Map<java.lang.String, java.lang.String> mapArgs);

    public String maxlikehood(Classify inputclass, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_maxlikehood(Classify inputclass, java.util.Map<java.lang.String, java.lang.String> mapArgs);

    public Ice.AsyncResult begin_maxlikehood(Classify inputclass, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_maxlikehood(Classify inputclass, java.util.Map<java.lang.String, java.lang.String> mapArgs, Ice.Callback __cb);

    public Ice.AsyncResult begin_maxlikehood(Classify inputclass, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_maxlikehood(Classify inputclass, java.util.Map<java.lang.String, java.lang.String> mapArgs, Callback_InfRice_maxlikehood __cb);

    public Ice.AsyncResult begin_maxlikehood(Classify inputclass, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx, Callback_InfRice_maxlikehood __cb);

    public Ice.AsyncResult begin_maxlikehood(Classify inputclass, 
                                             java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_maxlikehood(Classify inputclass, 
                                             java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_maxlikehood(Classify inputclass, 
                                             java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_maxlikehood(Classify inputclass, 
                                             java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public String end_maxlikehood(Ice.AsyncResult __result);

    public String landyield(Yield inputyield, java.util.Map<java.lang.String, java.lang.String> mapArgs);

    public String landyield(Yield inputyield, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_landyield(Yield inputyield, java.util.Map<java.lang.String, java.lang.String> mapArgs);

    public Ice.AsyncResult begin_landyield(Yield inputyield, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_landyield(Yield inputyield, java.util.Map<java.lang.String, java.lang.String> mapArgs, Ice.Callback __cb);

    public Ice.AsyncResult begin_landyield(Yield inputyield, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_landyield(Yield inputyield, java.util.Map<java.lang.String, java.lang.String> mapArgs, Callback_InfRice_landyield __cb);

    public Ice.AsyncResult begin_landyield(Yield inputyield, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx, Callback_InfRice_landyield __cb);

    public Ice.AsyncResult begin_landyield(Yield inputyield, 
                                           java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_landyield(Yield inputyield, 
                                           java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_landyield(Yield inputyield, 
                                           java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_landyield(Yield inputyield, 
                                           java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public String end_landyield(Ice.AsyncResult __result);

    public String landdrought(Drought inputdrought, java.util.Map<java.lang.String, java.lang.String> mapArgs);

    public String landdrought(Drought inputdrought, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_landdrought(Drought inputdrought, java.util.Map<java.lang.String, java.lang.String> mapArgs);

    public Ice.AsyncResult begin_landdrought(Drought inputdrought, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_landdrought(Drought inputdrought, java.util.Map<java.lang.String, java.lang.String> mapArgs, Ice.Callback __cb);

    public Ice.AsyncResult begin_landdrought(Drought inputdrought, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_landdrought(Drought inputdrought, java.util.Map<java.lang.String, java.lang.String> mapArgs, Callback_InfRice_landdrought __cb);

    public Ice.AsyncResult begin_landdrought(Drought inputdrought, java.util.Map<java.lang.String, java.lang.String> mapArgs, java.util.Map<String, String> __ctx, Callback_InfRice_landdrought __cb);

    public Ice.AsyncResult begin_landdrought(Drought inputdrought, 
                                             java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_landdrought(Drought inputdrought, 
                                             java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_landdrought(Drought inputdrought, 
                                             java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_landdrought(Drought inputdrought, 
                                             java.util.Map<java.lang.String, java.lang.String> mapArgs, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public String end_landdrought(Ice.AsyncResult __result);
}
