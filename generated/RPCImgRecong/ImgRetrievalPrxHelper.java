// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `ImageRetrieveRpc.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package RPCImgRecong;

/**
 * Provides type-specific helper functions.
 **/
public final class ImgRetrievalPrxHelper extends Ice.ObjectPrxHelperBase implements ImgRetrievalPrx
{
    private static final String __fetchImgSearchResult_name = "fetchImgSearchResult";

    public WordRes fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg)
    {
        return fetchImgSearchResult(mapArg, null, false);
    }

    public WordRes fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx)
    {
        return fetchImgSearchResult(mapArg, __ctx, true);
    }

    private WordRes fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__fetchImgSearchResult_name);
        return end_fetchImgSearchResult(begin_fetchImgSearchResult(mapArg, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg)
    {
        return begin_fetchImgSearchResult(mapArg, null, false, false, null);
    }

    public Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx)
    {
        return begin_fetchImgSearchResult(mapArg, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, Ice.Callback __cb)
    {
        return begin_fetchImgSearchResult(mapArg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_fetchImgSearchResult(mapArg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, Callback_ImgRetrieval_fetchImgSearchResult __cb)
    {
        return begin_fetchImgSearchResult(mapArg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, Callback_ImgRetrieval_fetchImgSearchResult __cb)
    {
        return begin_fetchImgSearchResult(mapArg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                      IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_fetchImgSearchResult(mapArg, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                      IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_fetchImgSearchResult(mapArg, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_fetchImgSearchResult(mapArg, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_fetchImgSearchResult(mapArg, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                       java.util.Map<String, String> __ctx, 
                                                       boolean __explicitCtx, 
                                                       boolean __synchronous, 
                                                       IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_fetchImgSearchResult(mapArg, __ctx, __explicitCtx, __synchronous, 
                                          new IceInternal.Functional_TwowayCallbackArg1<RPCImgRecong.WordRes>(__responseCb, __exceptionCb, __sentCb)
                                              {
                                                  public final void __completed(Ice.AsyncResult __result)
                                                  {
                                                      ImgRetrievalPrxHelper.__fetchImgSearchResult_completed(this, __result);
                                                  }
                                              });
    }

    private Ice.AsyncResult begin_fetchImgSearchResult(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                       java.util.Map<String, String> __ctx, 
                                                       boolean __explicitCtx, 
                                                       boolean __synchronous, 
                                                       IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__fetchImgSearchResult_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__fetchImgSearchResult_name, __cb);
        try
        {
            __result.prepare(__fetchImgSearchResult_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            DictStr2StrHelper.write(__os, mapArg);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public WordRes end_fetchImgSearchResult(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __fetchImgSearchResult_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            WordRes __ret = null;
            __ret = WordRes.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __fetchImgSearchResult_completed(Ice.TwowayCallbackArg1<WordRes> __cb, Ice.AsyncResult __result)
    {
        RPCImgRecong.ImgRetrievalPrx __proxy = (RPCImgRecong.ImgRetrievalPrx)__result.getProxy();
        WordRes __ret = null;
        try
        {
            __ret = __proxy.end_fetchImgSearchResult(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __imgSearchAsync_name = "imgSearchAsync";

    public int imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg)
    {
        return imgSearchAsync(mapArg, null, false);
    }

    public int imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx)
    {
        return imgSearchAsync(mapArg, __ctx, true);
    }

    private int imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__imgSearchAsync_name);
        return end_imgSearchAsync(begin_imgSearchAsync(mapArg, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg)
    {
        return begin_imgSearchAsync(mapArg, null, false, false, null);
    }

    public Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx)
    {
        return begin_imgSearchAsync(mapArg, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, Ice.Callback __cb)
    {
        return begin_imgSearchAsync(mapArg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_imgSearchAsync(mapArg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, Callback_ImgRetrieval_imgSearchAsync __cb)
    {
        return begin_imgSearchAsync(mapArg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, Callback_ImgRetrieval_imgSearchAsync __cb)
    {
        return begin_imgSearchAsync(mapArg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                IceInternal.Functional_IntCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_imgSearchAsync(mapArg, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                IceInternal.Functional_IntCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_imgSearchAsync(mapArg, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_IntCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_imgSearchAsync(mapArg, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_IntCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_imgSearchAsync(mapArg, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                 java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.Functional_IntCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_imgSearchAsync(mapArg, __ctx, __explicitCtx, __synchronous, 
                                    new IceInternal.Functional_TwowayCallbackInt(__responseCb, __exceptionCb, __sentCb)
                                        {
                                            public final void __completed(Ice.AsyncResult __result)
                                            {
                                                ImgRetrievalPrxHelper.__imgSearchAsync_completed(this, __result);
                                            }
                                        });
    }

    private Ice.AsyncResult begin_imgSearchAsync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                 java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__imgSearchAsync_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__imgSearchAsync_name, __cb);
        try
        {
            __result.prepare(__imgSearchAsync_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            DictStr2StrHelper.write(__os, mapArg);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public int end_imgSearchAsync(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __imgSearchAsync_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            int __ret;
            __ret = __is.readInt();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __imgSearchAsync_completed(Ice.TwowayCallbackInt __cb, Ice.AsyncResult __result)
    {
        RPCImgRecong.ImgRetrievalPrx __proxy = (RPCImgRecong.ImgRetrievalPrx)__result.getProxy();
        int __ret = 0;
        try
        {
            __ret = __proxy.end_imgSearchAsync(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __imgSearchSync_name = "imgSearchSync";

    public WordRes imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg)
    {
        return imgSearchSync(mapArg, null, false);
    }

    public WordRes imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx)
    {
        return imgSearchSync(mapArg, __ctx, true);
    }

    private WordRes imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__imgSearchSync_name);
        return end_imgSearchSync(begin_imgSearchSync(mapArg, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg)
    {
        return begin_imgSearchSync(mapArg, null, false, false, null);
    }

    public Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx)
    {
        return begin_imgSearchSync(mapArg, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, Ice.Callback __cb)
    {
        return begin_imgSearchSync(mapArg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_imgSearchSync(mapArg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, Callback_ImgRetrieval_imgSearchSync __cb)
    {
        return begin_imgSearchSync(mapArg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, Callback_ImgRetrieval_imgSearchSync __cb)
    {
        return begin_imgSearchSync(mapArg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                               IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_imgSearchSync(mapArg, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                               IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_imgSearchSync(mapArg, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_imgSearchSync(mapArg, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_imgSearchSync(mapArg, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                java.util.Map<String, String> __ctx, 
                                                boolean __explicitCtx, 
                                                boolean __synchronous, 
                                                IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_imgSearchSync(mapArg, __ctx, __explicitCtx, __synchronous, 
                                   new IceInternal.Functional_TwowayCallbackArg1<RPCImgRecong.WordRes>(__responseCb, __exceptionCb, __sentCb)
                                       {
                                           public final void __completed(Ice.AsyncResult __result)
                                           {
                                               ImgRetrievalPrxHelper.__imgSearchSync_completed(this, __result);
                                           }
                                       });
    }

    private Ice.AsyncResult begin_imgSearchSync(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                java.util.Map<String, String> __ctx, 
                                                boolean __explicitCtx, 
                                                boolean __synchronous, 
                                                IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__imgSearchSync_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__imgSearchSync_name, __cb);
        try
        {
            __result.prepare(__imgSearchSync_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            DictStr2StrHelper.write(__os, mapArg);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public WordRes end_imgSearchSync(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __imgSearchSync_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            WordRes __ret = null;
            __ret = WordRes.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __imgSearchSync_completed(Ice.TwowayCallbackArg1<WordRes> __cb, Ice.AsyncResult __result)
    {
        RPCImgRecong.ImgRetrievalPrx __proxy = (RPCImgRecong.ImgRetrievalPrx)__result.getProxy();
        WordRes __ret = null;
        try
        {
            __ret = __proxy.end_imgSearchSync(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __wordGetKnowledge_name = "wordGetKnowledge";

    public WordWiki wordGetKnowledge(String word)
    {
        return wordGetKnowledge(word, null, false);
    }

    public WordWiki wordGetKnowledge(String word, java.util.Map<String, String> __ctx)
    {
        return wordGetKnowledge(word, __ctx, true);
    }

    private WordWiki wordGetKnowledge(String word, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__wordGetKnowledge_name);
        return end_wordGetKnowledge(begin_wordGetKnowledge(word, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_wordGetKnowledge(String word)
    {
        return begin_wordGetKnowledge(word, null, false, false, null);
    }

    public Ice.AsyncResult begin_wordGetKnowledge(String word, java.util.Map<String, String> __ctx)
    {
        return begin_wordGetKnowledge(word, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_wordGetKnowledge(String word, Ice.Callback __cb)
    {
        return begin_wordGetKnowledge(word, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_wordGetKnowledge(String word, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_wordGetKnowledge(word, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_wordGetKnowledge(String word, Callback_ImgRetrieval_wordGetKnowledge __cb)
    {
        return begin_wordGetKnowledge(word, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_wordGetKnowledge(String word, java.util.Map<String, String> __ctx, Callback_ImgRetrieval_wordGetKnowledge __cb)
    {
        return begin_wordGetKnowledge(word, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_wordGetKnowledge(String word, 
                                                  IceInternal.Functional_GenericCallback1<WordWiki> __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_wordGetKnowledge(word, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_wordGetKnowledge(String word, 
                                                  IceInternal.Functional_GenericCallback1<WordWiki> __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_wordGetKnowledge(word, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_wordGetKnowledge(String word, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_GenericCallback1<WordWiki> __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_wordGetKnowledge(word, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_wordGetKnowledge(String word, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_GenericCallback1<WordWiki> __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_wordGetKnowledge(word, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_wordGetKnowledge(String word, 
                                                   java.util.Map<String, String> __ctx, 
                                                   boolean __explicitCtx, 
                                                   boolean __synchronous, 
                                                   IceInternal.Functional_GenericCallback1<WordWiki> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_wordGetKnowledge(word, __ctx, __explicitCtx, __synchronous, 
                                      new IceInternal.Functional_TwowayCallbackArg1<RPCImgRecong.WordWiki>(__responseCb, __exceptionCb, __sentCb)
                                          {
                                              public final void __completed(Ice.AsyncResult __result)
                                              {
                                                  ImgRetrievalPrxHelper.__wordGetKnowledge_completed(this, __result);
                                              }
                                          });
    }

    private Ice.AsyncResult begin_wordGetKnowledge(String word, 
                                                   java.util.Map<String, String> __ctx, 
                                                   boolean __explicitCtx, 
                                                   boolean __synchronous, 
                                                   IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__wordGetKnowledge_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__wordGetKnowledge_name, __cb);
        try
        {
            __result.prepare(__wordGetKnowledge_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(word);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public WordWiki end_wordGetKnowledge(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __wordGetKnowledge_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            WordWiki __ret = null;
            __ret = WordWiki.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __wordGetKnowledge_completed(Ice.TwowayCallbackArg1<WordWiki> __cb, Ice.AsyncResult __result)
    {
        RPCImgRecong.ImgRetrievalPrx __proxy = (RPCImgRecong.ImgRetrievalPrx)__result.getProxy();
        WordWiki __ret = null;
        try
        {
            __ret = __proxy.end_wordGetKnowledge(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __wordSearch_name = "wordSearch";

    public WordRes wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg)
    {
        return wordSearch(mapArg, null, false);
    }

    public WordRes wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx)
    {
        return wordSearch(mapArg, __ctx, true);
    }

    private WordRes wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__wordSearch_name);
        return end_wordSearch(begin_wordSearch(mapArg, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg)
    {
        return begin_wordSearch(mapArg, null, false, false, null);
    }

    public Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx)
    {
        return begin_wordSearch(mapArg, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, Ice.Callback __cb)
    {
        return begin_wordSearch(mapArg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_wordSearch(mapArg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, Callback_ImgRetrieval_wordSearch __cb)
    {
        return begin_wordSearch(mapArg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, Callback_ImgRetrieval_wordSearch __cb)
    {
        return begin_wordSearch(mapArg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                            IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_wordSearch(mapArg, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                            IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_wordSearch(mapArg, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_wordSearch(mapArg, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_wordSearch(mapArg, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.Functional_GenericCallback1<WordRes> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_wordSearch(mapArg, __ctx, __explicitCtx, __synchronous, 
                                new IceInternal.Functional_TwowayCallbackArg1<RPCImgRecong.WordRes>(__responseCb, __exceptionCb, __sentCb)
                                    {
                                        public final void __completed(Ice.AsyncResult __result)
                                        {
                                            ImgRetrievalPrxHelper.__wordSearch_completed(this, __result);
                                        }
                                    });
    }

    private Ice.AsyncResult begin_wordSearch(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__wordSearch_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__wordSearch_name, __cb);
        try
        {
            __result.prepare(__wordSearch_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            DictStr2StrHelper.write(__os, mapArg);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public WordRes end_wordSearch(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __wordSearch_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            WordRes __ret = null;
            __ret = WordRes.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __wordSearch_completed(Ice.TwowayCallbackArg1<WordRes> __cb, Ice.AsyncResult __result)
    {
        RPCImgRecong.ImgRetrievalPrx __proxy = (RPCImgRecong.ImgRetrievalPrx)__result.getProxy();
        WordRes __ret = null;
        try
        {
            __ret = __proxy.end_wordSearch(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __wordSearchImg_name = "wordSearchImg";

    public ImgRes wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg)
    {
        return wordSearchImg(mapArg, null, false);
    }

    public ImgRes wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx)
    {
        return wordSearchImg(mapArg, __ctx, true);
    }

    private ImgRes wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__wordSearchImg_name);
        return end_wordSearchImg(begin_wordSearchImg(mapArg, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg)
    {
        return begin_wordSearchImg(mapArg, null, false, false, null);
    }

    public Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx)
    {
        return begin_wordSearchImg(mapArg, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, Ice.Callback __cb)
    {
        return begin_wordSearchImg(mapArg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_wordSearchImg(mapArg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, Callback_ImgRetrieval_wordSearchImg __cb)
    {
        return begin_wordSearchImg(mapArg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, java.util.Map<String, String> __ctx, Callback_ImgRetrieval_wordSearchImg __cb)
    {
        return begin_wordSearchImg(mapArg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                               IceInternal.Functional_GenericCallback1<ImgRes> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_wordSearchImg(mapArg, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                               IceInternal.Functional_GenericCallback1<ImgRes> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_wordSearchImg(mapArg, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<ImgRes> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_wordSearchImg(mapArg, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<ImgRes> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_wordSearchImg(mapArg, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                java.util.Map<String, String> __ctx, 
                                                boolean __explicitCtx, 
                                                boolean __synchronous, 
                                                IceInternal.Functional_GenericCallback1<ImgRes> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_wordSearchImg(mapArg, __ctx, __explicitCtx, __synchronous, 
                                   new IceInternal.Functional_TwowayCallbackArg1<RPCImgRecong.ImgRes>(__responseCb, __exceptionCb, __sentCb)
                                       {
                                           public final void __completed(Ice.AsyncResult __result)
                                           {
                                               ImgRetrievalPrxHelper.__wordSearchImg_completed(this, __result);
                                           }
                                       });
    }

    private Ice.AsyncResult begin_wordSearchImg(java.util.Map<java.lang.String, java.lang.String> mapArg, 
                                                java.util.Map<String, String> __ctx, 
                                                boolean __explicitCtx, 
                                                boolean __synchronous, 
                                                IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__wordSearchImg_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__wordSearchImg_name, __cb);
        try
        {
            __result.prepare(__wordSearchImg_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            DictStr2StrHelper.write(__os, mapArg);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public ImgRes end_wordSearchImg(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __wordSearchImg_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            ImgRes __ret = null;
            __ret = ImgRes.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __wordSearchImg_completed(Ice.TwowayCallbackArg1<ImgRes> __cb, Ice.AsyncResult __result)
    {
        RPCImgRecong.ImgRetrievalPrx __proxy = (RPCImgRecong.ImgRetrievalPrx)__result.getProxy();
        ImgRes __ret = null;
        try
        {
            __ret = __proxy.end_wordSearchImg(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ImgRetrievalPrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), ImgRetrievalPrx.class, ImgRetrievalPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ImgRetrievalPrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), ImgRetrievalPrx.class, ImgRetrievalPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ImgRetrievalPrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), ImgRetrievalPrx.class, ImgRetrievalPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ImgRetrievalPrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), ImgRetrievalPrx.class, ImgRetrievalPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static ImgRetrievalPrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, ImgRetrievalPrx.class, ImgRetrievalPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static ImgRetrievalPrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, ImgRetrievalPrx.class, ImgRetrievalPrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::RPCImgRecong::ImgRetrieval"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, ImgRetrievalPrx v)
    {
        __os.writeProxy(v);
    }

    public static ImgRetrievalPrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            ImgRetrievalPrxHelper result = new ImgRetrievalPrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
