// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `wisefuseRpc.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package RPCWiseFuse;

public class FusionInf implements java.lang.Cloneable, java.io.Serializable
{
    public double cnttimeuse;

    public String producetime;

    public double ulcoorvalidLongitude;

    public double ulcoorvalidLatitude;

    public double brcoorvalidLongitude;

    public double brcoorvalidLatitude;

    public double ulcoorwholeLongitude;

    public double ulcoorwholeLatitude;

    public double brcoorwholeLongitude;

    public double brcoorwholeLatitude;

    public float resolution;

    public String productFormat;

    public String projectiontype;

    public String datumname;

    public String projectioncode;

    public String projectionunits;

    public float projcentralmeridian;

    public int status;

    public FusionInf()
    {
        producetime = "";
        productFormat = "";
        projectiontype = "";
        datumname = "";
        projectioncode = "";
        projectionunits = "";
    }

    public FusionInf(double cnttimeuse, String producetime, double ulcoorvalidLongitude, double ulcoorvalidLatitude, double brcoorvalidLongitude, double brcoorvalidLatitude, double ulcoorwholeLongitude, double ulcoorwholeLatitude, double brcoorwholeLongitude, double brcoorwholeLatitude, float resolution, String productFormat, String projectiontype, String datumname, String projectioncode, String projectionunits, float projcentralmeridian, int status)
    {
        this.cnttimeuse = cnttimeuse;
        this.producetime = producetime;
        this.ulcoorvalidLongitude = ulcoorvalidLongitude;
        this.ulcoorvalidLatitude = ulcoorvalidLatitude;
        this.brcoorvalidLongitude = brcoorvalidLongitude;
        this.brcoorvalidLatitude = brcoorvalidLatitude;
        this.ulcoorwholeLongitude = ulcoorwholeLongitude;
        this.ulcoorwholeLatitude = ulcoorwholeLatitude;
        this.brcoorwholeLongitude = brcoorwholeLongitude;
        this.brcoorwholeLatitude = brcoorwholeLatitude;
        this.resolution = resolution;
        this.productFormat = productFormat;
        this.projectiontype = projectiontype;
        this.datumname = datumname;
        this.projectioncode = projectioncode;
        this.projectionunits = projectionunits;
        this.projcentralmeridian = projcentralmeridian;
        this.status = status;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FusionInf _r = null;
        if(rhs instanceof FusionInf)
        {
            _r = (FusionInf)rhs;
        }

        if(_r != null)
        {
            if(cnttimeuse != _r.cnttimeuse)
            {
                return false;
            }
            if(producetime != _r.producetime)
            {
                if(producetime == null || _r.producetime == null || !producetime.equals(_r.producetime))
                {
                    return false;
                }
            }
            if(ulcoorvalidLongitude != _r.ulcoorvalidLongitude)
            {
                return false;
            }
            if(ulcoorvalidLatitude != _r.ulcoorvalidLatitude)
            {
                return false;
            }
            if(brcoorvalidLongitude != _r.brcoorvalidLongitude)
            {
                return false;
            }
            if(brcoorvalidLatitude != _r.brcoorvalidLatitude)
            {
                return false;
            }
            if(ulcoorwholeLongitude != _r.ulcoorwholeLongitude)
            {
                return false;
            }
            if(ulcoorwholeLatitude != _r.ulcoorwholeLatitude)
            {
                return false;
            }
            if(brcoorwholeLongitude != _r.brcoorwholeLongitude)
            {
                return false;
            }
            if(brcoorwholeLatitude != _r.brcoorwholeLatitude)
            {
                return false;
            }
            if(resolution != _r.resolution)
            {
                return false;
            }
            if(productFormat != _r.productFormat)
            {
                if(productFormat == null || _r.productFormat == null || !productFormat.equals(_r.productFormat))
                {
                    return false;
                }
            }
            if(projectiontype != _r.projectiontype)
            {
                if(projectiontype == null || _r.projectiontype == null || !projectiontype.equals(_r.projectiontype))
                {
                    return false;
                }
            }
            if(datumname != _r.datumname)
            {
                if(datumname == null || _r.datumname == null || !datumname.equals(_r.datumname))
                {
                    return false;
                }
            }
            if(projectioncode != _r.projectioncode)
            {
                if(projectioncode == null || _r.projectioncode == null || !projectioncode.equals(_r.projectioncode))
                {
                    return false;
                }
            }
            if(projectionunits != _r.projectionunits)
            {
                if(projectionunits == null || _r.projectionunits == null || !projectionunits.equals(_r.projectionunits))
                {
                    return false;
                }
            }
            if(projcentralmeridian != _r.projcentralmeridian)
            {
                return false;
            }
            if(status != _r.status)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::RPCWiseFuse::FusionInf");
        __h = IceInternal.HashUtil.hashAdd(__h, cnttimeuse);
        __h = IceInternal.HashUtil.hashAdd(__h, producetime);
        __h = IceInternal.HashUtil.hashAdd(__h, ulcoorvalidLongitude);
        __h = IceInternal.HashUtil.hashAdd(__h, ulcoorvalidLatitude);
        __h = IceInternal.HashUtil.hashAdd(__h, brcoorvalidLongitude);
        __h = IceInternal.HashUtil.hashAdd(__h, brcoorvalidLatitude);
        __h = IceInternal.HashUtil.hashAdd(__h, ulcoorwholeLongitude);
        __h = IceInternal.HashUtil.hashAdd(__h, ulcoorwholeLatitude);
        __h = IceInternal.HashUtil.hashAdd(__h, brcoorwholeLongitude);
        __h = IceInternal.HashUtil.hashAdd(__h, brcoorwholeLatitude);
        __h = IceInternal.HashUtil.hashAdd(__h, resolution);
        __h = IceInternal.HashUtil.hashAdd(__h, productFormat);
        __h = IceInternal.HashUtil.hashAdd(__h, projectiontype);
        __h = IceInternal.HashUtil.hashAdd(__h, datumname);
        __h = IceInternal.HashUtil.hashAdd(__h, projectioncode);
        __h = IceInternal.HashUtil.hashAdd(__h, projectionunits);
        __h = IceInternal.HashUtil.hashAdd(__h, projcentralmeridian);
        __h = IceInternal.HashUtil.hashAdd(__h, status);
        return __h;
    }

    public FusionInf
    clone()
    {
        FusionInf c = null;
        try
        {
            c = (FusionInf)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeDouble(cnttimeuse);
        __os.writeString(producetime);
        __os.writeDouble(ulcoorvalidLongitude);
        __os.writeDouble(ulcoorvalidLatitude);
        __os.writeDouble(brcoorvalidLongitude);
        __os.writeDouble(brcoorvalidLatitude);
        __os.writeDouble(ulcoorwholeLongitude);
        __os.writeDouble(ulcoorwholeLatitude);
        __os.writeDouble(brcoorwholeLongitude);
        __os.writeDouble(brcoorwholeLatitude);
        __os.writeFloat(resolution);
        __os.writeString(productFormat);
        __os.writeString(projectiontype);
        __os.writeString(datumname);
        __os.writeString(projectioncode);
        __os.writeString(projectionunits);
        __os.writeFloat(projcentralmeridian);
        __os.writeInt(status);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        cnttimeuse = __is.readDouble();
        producetime = __is.readString();
        ulcoorvalidLongitude = __is.readDouble();
        ulcoorvalidLatitude = __is.readDouble();
        brcoorvalidLongitude = __is.readDouble();
        brcoorvalidLatitude = __is.readDouble();
        ulcoorwholeLongitude = __is.readDouble();
        ulcoorwholeLatitude = __is.readDouble();
        brcoorwholeLongitude = __is.readDouble();
        brcoorwholeLatitude = __is.readDouble();
        resolution = __is.readFloat();
        productFormat = __is.readString();
        projectiontype = __is.readString();
        datumname = __is.readString();
        projectioncode = __is.readString();
        projectionunits = __is.readString();
        projcentralmeridian = __is.readFloat();
        status = __is.readInt();
    }

    static public void
    __write(IceInternal.BasicStream __os, FusionInf __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public FusionInf
    __read(IceInternal.BasicStream __is, FusionInf __v)
    {
        if(__v == null)
        {
             __v = new FusionInf();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final FusionInf __nullMarshalValue = new FusionInf();

    public static final long serialVersionUID = 2105328058L;
}
